package Jegmezo;

import java.util.ArrayList;
import java.util.Random;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Controller.java
//  @ Date : 2020. 05. 05.
//  @ Author : 
//
//




public class Controller {
	private Jegmezo jegmezo;
	private View view;
	private Jatekos koronlevo;
	private int koronlevoIdx;
	private ArrayList<Jegtabla> jegtablak=new ArrayList<Jegtabla>();
	private int jegtablakDB;
	public void palyaLetrehoz(int eszkimodb, int sarkkutato, int tablakDB, int jegesmedvedb) {
		jegmezo=new Jegmezo(5);
		Random rand=new Random();
		jegtablakDB=tablakDB;
		
		for(int i=0;i<tablakDB;i++) {
			for(int j=0;j<tablakDB;j++) {
				DrawJegtabla djt=new DrawJegtabla();
				djt.setPosition(j, i);
				view.addDrawable(djt);
				DrawHo dho=new DrawHo();
				dho.setPosition(j, i);
				view.addDrawable(dho);
				int tartokepesseg=rand.nextInt(eszkimodb+sarkkutato);
				int ho=rand.nextInt(5)+1;
				boolean atforditva=false;
				if(tartokepesseg==0)atforditva=true;
				int szomszedok=4;
				if(i==0||i==tablakDB-1&&j==0||j==tablakDB-1) szomszedok=2;
				if(i==0||i==tablakDB-1&&!(j==0||j==tablakDB-1)) szomszedok=3;
				Jegtabla jt=new Jegtabla(jegmezo,atforditva,ho,tartokepesseg,szomszedok);
				jegtablak.add(jt);
				if(i!=0) { //minden alsó sor beállítja a felsõt szomszédnak
					jt.setSzomszed(jegtablak.get(jegtablak.size()-tablakDB-1), 1, 90);
					jegtablak.get(jegtablak.size()-tablakDB-1).setSzomszed(jt, 3, 270);
				}
				if(j!=0) {//minden jobb olsali oszlop beállítja a balt szomszédnak
					jt.setSzomszed(jegtablak.get(jegtablak.size()-2), 2, 180);
					jegtablak.get(jegtablak.size()-tablakDB).setSzomszed(jt, 0, 0);
				}
					
				jegmezo.addFrissitheto(jt);
			}
		}
		for(int i=0;i<eszkimodb;i++) {
			Eszkimo e=new Eszkimo(jegmezo,4,5);
			int x=rand.nextInt(tablakDB);
			int y=rand.nextInt(tablakDB);
			while(jegtablak.get(y*tablakDB+x).getJatekosokSzama()!=0) {
				x=rand.nextInt(tablakDB);
				y=rand.nextInt(tablakDB);
			}
			DrawEszkimo de=new DrawEszkimo();
			de.setPosition(x, y);
			jegtablak.get(y*tablakDB+x).addJatekos(e);
			view.addDrawable(de);
			jegmezo.addJatekos(e);
		}
		for(int i=0;i<sarkkutato;i++) {
			Sarkkutato s=new Sarkkutato(jegmezo,4,5);
			int x=rand.nextInt(tablakDB);
			int y=rand.nextInt(tablakDB);
			while(jegtablak.get(y*tablakDB+x).getJatekosokSzama()!=0) {
				x=rand.nextInt(tablakDB);
				y=rand.nextInt(tablakDB);
			}
			DrawSarkkutato ds=new DrawSarkkutato();
			ds.setPosition(x, y);
			jegtablak.get(y*tablakDB+x).addJatekos(s);
			view.addDrawable(ds);
			jegmezo.addJatekos(s);
		}
		for(int i=0;i<jegesmedvedb;i++) {
			Jegesmedve jm=new Jegesmedve(jegmezo,rand.nextBoolean());
			int x=rand.nextInt(tablakDB);
			int y=rand.nextInt(tablakDB);
			while(jegtablak.get(y*tablakDB+x).getJatekosokSzama()!=0) {
				x=rand.nextInt(tablakDB);
				y=rand.nextInt(tablakDB);
			}
			DrawJegesmedve djm=new DrawJegesmedve();
			djm.setPosition(x, y);
			jegtablak.get(y*tablakDB+x).addJegesmedve(jm);
			view.addDrawable(djm);
			jegmezo.addFrissitheto(jm);
		}
		koronlevo=jegmezo.getJatekosok().get(0);
		koronlevoIdx=0;
	}
	
	public void korLeptet() {
		if(++koronlevoIdx>=jegmezo.GetJatekosSzam()-1) {
			koronlevoIdx=0;
			ujKor();
		}
		koronlevo=jegmezo.getJatekosok().get(koronlevoIdx);
		view.setTaska(koronlevoIdx);
	}
	
	public void ujKor() {//jegesmedve, sator hianyzik
		boolean drawho=false;
		ArrayList<Integer> nincsho=new ArrayList<Integer>();
		if(jegmezo.getHoviharCnt()==0) {
			drawho=true;
			
			for(int i=0;i<jegtablak.size();i++) {
				if(jegtablak.get(i).getHo()<=0) nincsho.add(i);
			}
		}
		jegmezo.leptet();
		if(drawho=true) {
			for(int i=0;i<nincsho.size();i++) {
				DrawHo dh=new DrawHo();
				dh.setPosition(nincsho.get(i)-(nincsho.get(i)%jegtablakDB)*jegtablakDB, nincsho.get(i)%jegtablakDB);
				view.addDrawable(dh);
			}
		}
		
	}
}
