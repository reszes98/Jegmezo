package Jegmezo;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Controller.java
//  @ Date : 2020. 05. 05.
//  @ Author : 
//
//




public class Controller {
	private Jegmezo jegmezo;
	private View view;
	private Jatekos koronlevo;
	private int koronlevoIdx;
	private ArrayList<Osszerendeles> jegtablak=new ArrayList<Osszerendeles>();
	private int jegtablakDB;
	private ArrayList<Osszerendeles> jegesmedvek=new ArrayList<Osszerendeles>();
	private ArrayList<Osszerendeles> satrak=new ArrayList<Osszerendeles>();
	private ArrayList<Osszerendeles> jatekosok=new ArrayList<Osszerendeles>();
	
	class Osszerendeles{
		public Drawable draw;
		public Object obj;
		public Osszerendeles(Drawable d, Object o) {
			draw=d; obj=o;
		}
	}
	
	public void palyaLetrehoz(int eszkimodb, int sarkkutato, int tablakDB, int jegesmedvedb) {
		jegmezo=new Jegmezo(5);
		Random rand=new Random();
		jegtablakDB=tablakDB;
		
		for(int i=0;i<tablakDB;i++) {
			for(int j=0;j<tablakDB;j++) {
				DrawJegtabla djt=new DrawJegtabla();
				djt.setPosition(j, i);
				view.addDrawable(djt);
				DrawHo dho=new DrawHo();
				dho.setPosition(j, i);
				view.addDrawable(dho);
				int tartokepesseg=rand.nextInt(eszkimodb+sarkkutato);
				int ho=rand.nextInt(5)+1;
				boolean atforditva=false;
				if(tartokepesseg==0)atforditva=true;
				int szomszedok=4;
				if(i==0||i==tablakDB-1&&j==0||j==tablakDB-1) szomszedok=2;
				if(i==0||i==tablakDB-1&&!(j==0||j==tablakDB-1)) szomszedok=3;
				
				Jegtabla jt=new Jegtabla(jegmezo,atforditva,ho,tartokepesseg,szomszedok);
				Osszerendeles uj=new Osszerendeles(dho, jt);
				jegtablak.add(uj);
				if(i!=0) { //minden alsó sor beállítja a felsõt szomszédnak
					jt.setSzomszed((Jegtabla) jegtablak.get(jegtablak.size()-tablakDB-1).obj, 1, 90);
					Jegtabla jegt=(Jegtabla)jegtablak.get(jegtablak.size()-tablakDB-1).obj;
					jegt.setSzomszed(jt, 3, 270);
				}
				if(j!=0) {//minden jobb olsali oszlop beállítja a balt szomszédnak
					jt.setSzomszed((Jegtabla)jegtablak.get(jegtablak.size()-2).obj, 2, 180);
					Jegtabla jegt=(Jegtabla)jegtablak.get(jegtablak.size()-tablakDB).obj;
					jegt.setSzomszed(jt, 0, 0);
				}
					
				jegmezo.addFrissitheto(jt);
			}
		}
		for(int i=0;i<eszkimodb;i++) {
			Eszkimo e=new Eszkimo(jegmezo,4,5);
			int x=rand.nextInt(tablakDB);
			int y=rand.nextInt(tablakDB);
			while(((Jegtabla)jegtablak.get(y*tablakDB+x).obj).getJatekosokSzama()!=0) {
				x=rand.nextInt(tablakDB);
				y=rand.nextInt(tablakDB);
			}
			DrawEszkimo de=new DrawEszkimo();
			de.setPosition(x, y);
			((Jegtabla)jegtablak.get(y*tablakDB+x).obj).addJatekos(e);
			jatekosok.add(new Osszerendeles(de,e));
			view.addDrawable(de);
			jegmezo.addJatekos(e);
		}
		for(int i=0;i<sarkkutato;i++) {
			Sarkkutato s=new Sarkkutato(jegmezo,4,5);
			int x=rand.nextInt(tablakDB);
			int y=rand.nextInt(tablakDB);
			while(((Jegtabla)jegtablak.get(y*tablakDB+x).obj).getJatekosokSzama()!=0) {
				x=rand.nextInt(tablakDB);
				y=rand.nextInt(tablakDB);
			}
			DrawSarkkutato ds=new DrawSarkkutato();
			ds.setPosition(x, y);
			((Jegtabla)jegtablak.get(y*tablakDB+x).obj).addJatekos(s);
			jatekosok.add(new Osszerendeles(ds,s));
			view.addDrawable(ds);
			jegmezo.addJatekos(s);
		}
		for(int i=0;i<jegesmedvedb;i++) {
			Jegesmedve jm=new Jegesmedve(jegmezo,rand.nextBoolean());
			int x=rand.nextInt(tablakDB);
			int y=rand.nextInt(tablakDB);
			while(((Jegtabla)jegtablak.get(y*tablakDB+x).obj).getJatekosokSzama()!=0) {
				x=rand.nextInt(tablakDB);
				y=rand.nextInt(tablakDB);
			}
			DrawJegesmedve djm=new DrawJegesmedve();
			djm.setPosition(x, y);
			((Jegtabla)jegtablak.get(y*tablakDB+x).obj).addJegesmedve(jm);
			jegesmedvek.add(new Osszerendeles(djm,jm));
			view.addDrawable(djm);
			jegmezo.addFrissitheto(jm);
		}
		koronlevo=jegmezo.getJatekosok().get(0);
		koronlevoIdx=0;
	}
	
	public void korLeptet() {
		if(++koronlevoIdx>=jegmezo.GetJatekosSzam()-1) {
			koronlevoIdx=0;
			ujKor();
		}
		koronlevo=jegmezo.getJatekosok().get(koronlevoIdx);
		view.setTaska(koronlevoIdx);
	}
	
	public void ujKor() {//jegesmedve, sator hianyzik
		boolean drawho=false;
		ArrayList<Integer> nincsho=new ArrayList<Integer>();
		if(jegmezo.getHoviharCnt()==0) {
			drawho=true;
			
			for(int i=0;i<jegtablak.size();i++) {
				if(((Jegtabla)jegtablak.get(i).obj).getHo()<=0) nincsho.add(i);
			}
		}
		jegmezo.leptet();
		if(drawho=true) {
			for(int i=0;i<nincsho.size();i++) {
				DrawHo dh=new DrawHo();
				dh.setPosition(nincsho.get(i)-(nincsho.get(i)%jegtablakDB)*jegtablakDB, nincsho.get(i)%jegtablakDB);
				view.addDrawable(dh);
				view.eltavolitDrawable(jegtablak.get(nincsho.get(i)).draw);
				jegtablak.get(nincsho.get(i)).draw=dh;
			}
		}
		
		for(int i=0;i<satrak.size();i++) {
			if(((Sator)satrak.get(i).obj).tartossag==0)
				view.eltavolitDrawable(satrak.get(i).draw);
		}
		for(int i=0;i<jegesmedvek.size();i++) {
			Jegesmedve jm=(Jegesmedve)jegesmedvek.get(i).obj;
			Drawable djm=jegesmedvek.get(i).draw;
			if(jm.getLepett()) {
				int szog=jm.getSzog();
				if(szog==0) {
					djm.setPositionX(djm.getPositionX()+1);
				}
				if(szog==90) {
					djm.setPositionY(djm.getPositionY()-1);
				}
				if(szog==180) {
					djm.setPositionX(djm.getPositionX()-1);
				}
				if(szog==270) {
					djm.setPositionY(djm.getPositionY()+1);
				}
			}
		}
	}
	
	final class TargyActionListener implements ActionListener {
		JComboBox JCtaska;
		public TargyActionListener() {
			
		}
		public void actionPerformed(ActionEvent ae) {
			
		}
	}
	
	public class GombokActionListener implements ActionListener {
		public void actionPerformed(ActionEvent ae){
		}
	}
	
	public class MenuActionListener implements ActionListener{
		private JFrame jf;
		private JTextField eszkimoTf;
		private JTextField sarkkutatoTf;
		private JLabel utasitas;
		Menu menu = new Menu();

		public MenuActionListener(JFrame jf, JTextField et, JTextField st, JLabel ul ) {
			this.jf = jf;
			this.eszkimoTf = et;
			this.sarkkutatoTf = st;
			this.utasitas = ul;
		}

		@Override
		public void actionPerformed(ActionEvent ae) {
			if (ae.getActionCommand().equals("Kilépés")) {
				jf.setVisible(false);
				System.out.println("kilépés");
				System.exit(0);
			}
			
			if (ae.getActionCommand().equals("Játék!")) {
				int enumb = Integer.parseInt(eszkimoTf.getText());
				int snumb = Integer.parseInt(sarkkutatoTf.getText());
				int osszeg = enumb+snumb;
				if(osszeg > 10) {
					System.out.println("Túl sok játékos! (Maximum 10)");
					utasitas.setFont(new Font("Curier New", Font.BOLD, 15));
					utasitas.setText("Túl sok játékos! (Maximum 10)");
				}
				if(osszeg < 3) {
					System.out.println("Túl kevés játékos! (Minimum 3)");
					utasitas.setFont(new Font("Curier New", Font.BOLD, 15));
					utasitas.setText("Túl kevés játékos! (Minimum 3)");
				}
				if(osszeg > 2 && osszeg < 11) {
					System.out.println("Megfelelõ játékos szám");
					System.out.println("Controller Palya létrehozása fv");
				} 
			}
			
			if (ae.getActionCommand().equals("Játékra fel!")) {
				System.out.println("Játékra fel");
				jf.setVisible(false);
				menu.Game();
			}
			
		}
	}
	
}
