package Jegmezo;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Játékos.java
//  @ Date : 25/03/2020
//  @ Author : 
//
//

import java.util.List;

public abstract class Jatekos implements Frissitheto
{
	private Jegmezo jegmezo;
	protected Jegtabla aktjegtabla;
	private int jelzopisztolydb;
	protected int Munkadb;
	private int testho;
	private List<Targy> targyak;
	protected Irany iranyAmibeNez;
	
	
	/**
	 * Konstruktor, ami létrehozza a Játékost a medadott paraméterekkel
	 * @param jegmezo - a jégmezõ, amin a Játékos van
	 * @param jelzopisztolydb - a Játékos jelzõpisztoly darabjainak száma
	 * @param Munkadb - A Játékos hátralévõ elvégezhetõ munka száma
	 * @param testho - a Játékos hátralévõ testhõje
	 * @param targyak - a Játékos által tárolt tárgyak
	 * @param iranyAmibeNez - az Irany, amibe a Játékos néz
	 */
	public Jatekos(Jegmezo jegmezo,
	int jelzopisztolydb,
	int Munkadb,
	int testho,
	List<Targy> targyak,
	Irany iranyAmibeNez)
	{
		this.jegmezo = jegmezo;
		this.jegmezo.addFrissitheto(this);
		this.aktjegtabla = aktjegtabla;
		this.jelzopisztolydb = jelzopisztolydb;
		this.Munkadb = Munkadb;
		this.testho = testho;
		this.targyak = targyak;
		this.iranyAmibeNez = iranyAmibeNez;
	}
	
	
	/**
	 * A Játékos ás 1-et azon a Jégtáblán, amin áll
	 */
	public void asas()
	{
		
		boolean sikeres = aktjegtabla.asas(1);
		if(sikeres)
		{
			Munkadb--;
			System.out.println("Asas sikeresen elvegezve");
		}
		else
			System.out.println("Asas sikertelenul elvegezve");
		
	}
	
	
	/**
	 * @param i - i irányban lévõ szomszédos jégmezõre helyezi át a játékost.
	 * @return Visszaadja, hogy sikeres volt-e az áthelyezés
	 */
	public boolean athelyez(Irany i)
	{
		Jegtabla szomszed = aktjegtabla.szomszedKerdez(i);
		if (szomszed!=null) {
			aktjegtabla.jatekosEltavolit(this);
			szomszed.ralep(this);
			System.out.println("Sikeresen athelyezve");
			return true;
		}
		else 
		{
			System.out.println("Nem sikerult athelyezni");
			return false;
		}
	}
	
	public void kilep(Jegtabla j)
	{
	}
	
	/**
	 * @param i csökkenti a testhõt a megadott mennyiséggel
	 */
	public void fazas(int i)
	{
		testho-=i;
		System.out.println("Testho csokkentve");
	}
	
	/**
	 *Az új kör elején visszaállítjuk a Munkadb-jét 4-re
	 */
	public void frissit()
	{
		Munkadb = 4;
	}
	
	/**
	 * @return Visszaadja a Játékos iranyAmibeNez-ét
	 */
	public Irany getIranyAmibeNez()
	{
		return iranyAmibeNez;
	}
	
	
	/**
	 * ha nincs iglu a jégtáblán ahol van, akkor meghívja a fázás függvényt, ha a testhõje 0-ra 
	 * csökken meghal, ezt jelzi a jégmezõnek
	 */
	public void hovihar()
	{
		boolean iglu=aktjegtabla.VanRajtaIgluLekerdez();
		if(!iglu) {
			this.fazas(1);
		}
		if(testho==0) {
			jegmezo.meghalt(this);
		}
	}
	
	/**
	 * @return Visszaadja a Játékos által tárolt jelzõpisztoly darabok számát
	 */
	public int getjelzopisztolydb()
	{
		return jelzopisztolydb;
	}
	
	/**
	 * Növeli eggyel a jelzopisztolydb-t.
	 */
	public void jelzopisztolyDarabokNovelese()
	{
		jelzopisztolydb++;
	}
	
	public Jegtabla JegtablaLekerdez()
	{
		return aktjegtabla;
	}
	
	/**
	 * A játékos képessége, amit a leszármazottak valósítanak meg
	 * @param j - a jégtábla, amin a képességet végezzük
	 */
	public abstract void kepesseg(Jegtabla j);
	
	
	/**
	 * Ezzel a függvénnyeltud majd lépni a játékos arra a jégtáblára, ami arra van, amerre néz
	 */
	public void lepes()
	{
		boolean ellephet = aktjegtabla.ellep(this);
		
		if(ellephet)
		{
			Jegtabla szJegtabla = aktjegtabla.szomszedKerdez(iranyAmibeNez);
			szJegtabla.ralep(this);
			System.out.println("Sikerult az ellepes");
			MunkaDBcsokkentese(1);
		}
		else {
			System.out.println("Nem sikerult az ellepes");
		}
		
	}
	
	
	
	/**
	 * Beállítja a játékost, hogy abba az irányba nézzen, amit megadunk
	 * @param i - Az irány, amibe szeretnénk, hogy nézzen a Játékos
	 */
	public void setIranyAmibeNez(Irany i)
	{
		iranyAmibeNez = i;
	}
	
	
	
	/**
	 * Meghívja a megadott indexû tárgyra a használ függvényt
	 * @param idx - annak a Tárgynak az indexe, amit használni akarunk
	 */
	public void targyHasznalat(int idx)
	{
		if(targyak != null)
		{
			boolean sikeres = targyak.get(idx).hasznal(this);
			if(sikeres)
			{
				System.out.println("A targyhasznalat sikerult");
				this.MunkaDBcsokkentese(1);
			}
			else 
				System.out.println("A targy hasznalat nem sikerult");
		}
			
	}
	
	/**
	 * Megpróbálja felvenni a tárgyat a jégtábláról, amin áll
	 */
	public void targyFelvetel()
	{
		
		boolean sikeres = aktjegtabla.targyFelvesz(this);
		if(sikeres)
		{
			System.out.println("A targyfelvetel sikerult");
			this.MunkaDBcsokkentese(1);
		}
		else
			System.out.println("A targyfelvetel nem sikerult");
		
			
	}
	
	/**
	 * @param t - tárgyat hozzáadja a játékos tárgyaihoz
	 */
	public boolean targyHozzadasa(Targy t)
	{
		
		targyak.add(t);
		System.out.println("Targy hozzaadva");
		return true;
	}
	
	/**
	 * Eltávolítja a paraméterben megadott tárgyat
	 * @param t - a tárgy, amit el akarunk távolítani
	 */
	public void targyEltavolitasa(Targy t)
	{
		targyak.remove(t);
	}
	

	/**
	 * @param mennyivel - noveli a testhot ezzel az értékkel, de a testhõt 
	 * max 6-ig tudjuk növelni.
	 * @return visszatér azzal, hogy 
	 */
	public boolean testhoNovelese(int mennyivel)
	{
		testho+= mennyivel;
		if (testho > 6) {
			testho=6;
			System.out.println("Testhot 6-ig lehet csak növelni.");
			return false;
		}
		else
		{
			System.out.println("Testho novelve");
			return true;
		}
	}
	
	/**
	 * csökkenti a megadott mennyiséggel a játékos munkaDB-jét
	 * Ha nullára csökken átadjuk a kört a következõ játékosnak
	 * @param mennyivel - mennyivel csökkentsük a MunkaDB-t
	 */
	public void MunkaDBcsokkentese(int mennyivel)
	{
		
		if(Munkadb - mennyivel < 0)
		{
			Munkadb = 0;
			System.out.println("Elfogytak a munkaid pajtas :)) ");
			korVege();
		}
		else
			Munkadb -= mennyivel;
			
		
		
	}
	
	/**
	 * Akkor hívódik meg, ha nulára csökkent a Játékos Munkadb-je
	 */
	public void korVege()
	{
		
	}
	
	/**
	 * @return Visszaadja a jégmezõt, amin a játékos van
	 */
	public Jegmezo getJegmezo()
	{
		return jegmezo;
	}
	
	public void setaktjegtabla(Jegtabla jt)
	{
		aktjegtabla  = jt;
	}
	
}
